{"version":3,"sources":["webpack://github-repo-gallery/./src/index.js","webpack://github-repo-gallery/./src/getclasses.js","webpack://github-repo-gallery/./src/wizard.js","webpack://github-repo-gallery/./src/barbarian.js"],"names":["console","log","newObj","a","b","c"],"mappings":"0sBAEAA,QAAQC,IAAI,qBCEVD,QAAQC,IAAI,yBACZD,QAAQC,ICLY,YDMpBD,QAAQC,IENe,WHMzB,IACMC,EAAS,EAAH,KADA,CAAEC,EAAG,QAASC,EAAG,UACjB,IAAaC,EAAG,YAC5BL,QAAQC,IAAIC,I","file":"bundle.js","sourcesContent":["import getClasses from './getclasses'\n\nconsole.log('ran from index.js')\n\ngetClasses()\n\nconst obj = { a: \"alpha\", b: \"bravo\"}\nconst newObj = { ...obj, c: \"charlie\"}\nconsole.log(newObj)\n// const userDetails = document.querySelector('.user-details');\n// const repoList = document.querySelector('.repo-list');\n// const reposContainer = document.querySelector('.repos');\n// const repoInfo = document.querySelector('.repo-info');\n// const backBtn = document.querySelector('.view-repos');\n// const filterInput = document.querySelector('.filter-repos');\n\n// const username = 'anacolell';\n/* fetch users */\n\n // const fetchUsers = async () => {\n //   const userUrl = await fetch(`https://api.github.com/users/${username}`);\n //   const userData = await userUrl.json();\n //   displayUser(userData)\n // }\n\n //   const displayUser = (userData) => {\n //     let userDiv = document.createElement('div');\n //     userDiv.innerHTML = `\n //     <img class=\"avatar\" src= ${userData.avatar_url}/>\n //     <div class=\"user-data\">\n //       <p><strong>Name:</strong> ${userData.name}</p>\n //       <p><strong>Location:</strong> ${userData.location}</p>\n //       <p><strong>Number of public repos:</strong> ${userData.public_repos}</p>\n //     </div>`;\n //     userDetails.append(userDiv);\n //   }\n\n //   fetchUsers()\n\n/* fetch repos from Graphql */\n\n// const baseUrl = \"https://api.github.com/graphql\";\n\n// const github_data = {\n//   \"token\": API_TOKEN,\n//   \"username\": \"anacolell\"\n// };\n\n// const headers = {\n//   'Content-Type': \"application/json\",\n//   'Authorization': \"bearer \" + github_data[\"token\"]\n// }\n\n// const body = {\n//   \"query\": `\n//   query {\n//     repositoryOwner(login:\"anacolell\"){\n//       repositories(orderBy:{\n//         field:CREATED_AT, direction:DESC}, first:100, privacy:PUBLIC){\n//         nodes{\n//           openGraphImageUrl,\n//           name,\n//           description,\n//           url,\n//           languages(first:10){\n//             nodes{\n//                 name\n//             }\n//           }\n//         }\n//       }\n//     }\n//   }\n//   `\n// }\n\n// const fetchRepos = async () => {\n//   const reposUrl = await fetch(baseUrl, {\n//   method: \"POST\",\n//   headers: headers,\n//   body: JSON.stringify(body)\n// })\n//   let reposResponse = await reposUrl.json();\n//   let repos = await reposResponse.data.repositoryOwner.repositories.nodes;\n//   console.log(repos)\n\n//   filterInput.classList.remove('hide');\n//   repos.forEach((repo)=> {\n//   console.log(repo.languages.nodes)\n//   let reposLi = document.createElement('li');\n//   reposLi.classList.add('repo');\n//   reposLi.innerHTML = `\n//   <h3>${repo.name}</h3>\n//   <img src=${repo.openGraphImageUrl}>\n//   `;\n//   repoList.append(reposLi);\n//   reposLi.classList.add('repo');\n// })\n// }\n\n// fetchRepos()\n\n/* fetch individual repos when clicked */\n\n// repoList.addEventListener('click', function(e) {\n//   if (e.target.matches(\"h3\")){\n//     let repoName = e.target.innerText;\n//     fetchRepo(repoName)\n//   }\n// })\n\n// const fetchRepo = async (repoName) => {\n//   const repoUrl = await fetch(`https://api.github.com/repos/${username}/${repoName}`);\n//   const repoData = await repoUrl.json();\n//   const languagesUrl = await fetch(`https://api.github.com/repos/${username}/${repoName}/languages`);\n//   const languagesData = await languagesUrl.json();\n//   const languages = Object.keys(languagesData);\n//   console.log(repoData)\n//   displayRepo(repoData, languages)\n// }\n\n// const displayRepo = (repoData, languages) => {\n//   let repoDiv = document.createElement('div');\n//   repoInfo.innerHTML = \"\";\n//   repoDiv.innerHTML = `\n//   <p class=\"repo-name\">Name: ${repoData.name}<p>\n//   <p>Description: ${repoData.description}<p>\n//   <p>Languages: ${languages.join(', ')}\n//   <a class=\"visit\" href=\"${repoData.html_url}\" target=\"_blank\" rel=\"noreferrer noopener\">View Repo on GitHub</a>`;\n//   repoInfo.append(repoDiv);\n//   reposContainer.classList.add('hide');\n//   repoInfo.classList.remove('hide');\n//   backBtn.classList.remove('hide')\n//   filterInput.classList.add('hide');\n// }\n\n/* hide button when going back to repo list */\n\n// backBtn.addEventListener('click', (e)=> {\n//   reposContainer.classList.remove('hide');\n//   repoInfo.classList.add('hide');\n//   backBtn.classList.add('hide');\n//   filterInput.classList.remove('hide')\n// })\n\n/* search function */\n\n// filterInput.addEventListener('input', (e) => {\n//   let value = e.target.value;\n//   let valueLowerCase = e.target.value.toLowerCase();\n//   let repos = document.querySelectorAll('.repo')\n//   repos.forEach((repo)=>{\n//     let repoTitle = repo.innerText.toLowerCase();\n//     if (repoTitle.includes(valueLowerCase)){\n//       repo.classList.remove('hide');\n//     } else {\n//       repo.classList.add('hide');\n//     }\n//   })\n// })\n\n// const fetchReadme = async () => {\n//   const readmeUrl = await fetch(baseUrl, {\n//   method: \"POST\",\n//   headers: headers,\n//   body: JSON.stringify(bodyQuery)\n// })\n//   let readmeResponse = await readmeUrl.json();\n//   let readme = await readmeResponse.data.repository.object.text\n//   console.log(readme)\n// }\n//    const bodyQuery = {\n//   \"query\": `\n//   query {\n//     repository(owner: \"anacolell\", name: \"locally\") {\n//     object(expression: \"master:README.md\") {\n//       ... on Blob {\n//         text\n//       }\n//   }\n//   }\n// }\n//   `\n// }\n\n\n","import { wizard } from './wizard'\nimport { barbarian } from './barbarian'\n\nfunction getClasses() {\n  console.log(\"getClasses was called\")\n  console.log(wizard)\n  console.log(barbarian)\n}\n\nexport default getClasses\n","export const wizard = \"Ravalynn\"\n","export const barbarian = \"hjulmar\"\n"],"sourceRoot":""}